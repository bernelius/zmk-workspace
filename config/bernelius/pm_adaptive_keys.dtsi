// q v p g m x s n t h k a e i c z f w d l j u o y b r
ak_excl: adaptive_key_excl_equal {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&excl_equal>;
    
    ak_excl_equal {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp EQUAL>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_q: adaptive_key_q {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp Q>;
    
    ak_q_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(Q)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_v: adaptive_key_v {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp V>;
    
    ak_v_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(V)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_p: adaptive_key_p {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp P>;
    
    ak_p_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(P)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_g: adaptive_key_g {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp G>;
    
    ak_g_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(G)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_m: adaptive_key_m {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp M>;
    
    ak_m_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(M)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_x: adaptive_key_x {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp X>;
    
    ak_x_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(X)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_s: adaptive_key_s {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp S>;
    
    ak_s_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(S)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_n: adaptive_key_n {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp N>;
    
    ak_n_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(N)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_t: adaptive_key_t {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp T>;
    
    ak_t_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(T)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_h: adaptive_key_h {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp H>;
    
    ak_h_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(H)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_k: adaptive_key_k {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp K>;
    
    ak_k_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(K)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};



ak_a: adaptive_key_a {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp A>;

//  I like typing closing braces/quotes/etc before filling them.         
//  This behavior moves me inside.
    move_inside {
        trigger-keys = <RPAR RBKT RBRC GREATER_THAN APOS DQT>;
        bindings = <&kp LEFT>;
        max-prior-idle-ms = <MAGIC_PRIOR_IDLE>;
    };

    ak_a_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(A)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_e: adaptive_key_e {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp E>;
//  after move_inside behavior below, this adds a semicolon and jumps back in the brackets.
    add_semi {
        strict-modifiers;
        trigger-keys = <LEFT>;
        bindings = <&kp RIGHT &kp SEMI &kp LEFT &kp LEFT>;
        max-prior-idle-ms = <MAGIC_PRIOR_IDLE>;
    };
    
    ak_e_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(E)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_i: adaptive_key_i {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp I>;
    
    ak_i_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(I)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_c: adaptive_key_c {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp C>;
    
    ak_c_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(C)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_z: adaptive_key_z {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp Z>;
    
    ak_z_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(Z)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};
    
ak_f: adaptive_key_f {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp F>;
    
    ak_f_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(F)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_w: adaptive_key_w {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp W>;
    
    ak_w_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(W)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_d: adaptive_key_d {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp D>;
    
    ak_d_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(D)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_l: adaptive_key_l {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp L>;
    
    ak_l_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(L)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_j: adaptive_key_j {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp J>;
    
    ak_j_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(J)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_u: adaptive_key_u {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp U>;
    
    ak_u_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(U)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_o: adaptive_key_o {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp O>;
    
    ak_o_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(O)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_y: adaptive_key_y {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp Y>;
    
    ak_y_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(Y)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_b: adaptive_key_b {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp B>;
    
    ak_b_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(B)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};

ak_r: adaptive_key_r {
    compatible = "zmk,behavior-adaptive-key";
    #binding-cells = <0>;
    bindings = <&kp R>;
    
    ak_r_caps {
        strict-modifiers;
        trigger-keys = <SEMI>;
        bindings = <&kp BACKSPACE &kp LS(R)>;
        max-prior-idle-ms = <SEMI_CAPS_PRIOR_IDLE>;
    };
};
