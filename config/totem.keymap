//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#define LEFT_HAND_KEYS 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34
#define RIGHT_HAND_KEYS 5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 35 36 37
#define LEFT_LEFT_COLUMN 20
#define QUICK_TAP_MS 175
#define COMBO_TIMEOUT 30
#define MAGIC_PRIOR_IDLE 350

#define ___ &trans
#define XXX &none

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <behaviors/num_word.dtsi>

/ {
    behaviors {
        num_word {
            continue-list = <LEFT RIGHT UP DOWN N1 N2 N3 N4 N5 N6 N7 N8 N9 N0 BSPC DEL DOT COMMA PLUS MINUS STAR SLASH SPACE>;
        };
        repeat_shift: repeat_alpha_or_oneshot_shift {
            compatible = "zmk,behavior-adaptive-key";
            #binding-cells = <0>;
            bindings = <&sk LSHFT>;

            repeat {
                trigger-keys = <A B C D E F G H I J K L M N O P Q R S T U V W X Y Z>;
                bindings = <&key_repeat>;
                max-prior-idle-ms = <MAGIC_PRIOR_IDLE>;
                strict-modifiers;
            };
        };
        ak_e: adaptive_key_e {
            compatible = "zmk,behavior-adaptive-key";
            #binding-cells = <0>;
            bindings = <&hmr RALT E>;
//          
//          after move_inside behavior below, this adds a semicolon and jumps back in the brackets.
            add_semi {
                trigger-keys = <LEFT>;
                bindings = <&kp RIGHT &kp SEMI &kp LEFT &kp LEFT>;
                max-prior-idle-ms = <MAGIC_PRIOR_IDLE>;
            };
        };
        ak_a: adaptive_key_a {
            compatible = "zmk,behavior-adaptive-key";
            #binding-cells = <0>;
            bindings = <&hmr RGUI A>;

//          I like typing closing braces/quotes/etc before filling them.
//          This behavior moves me inside.
            move_inside {
                trigger-keys = <RPAR RBKT RBRC GREATER_THAN APOS DQT>;
                bindings = <&kp LEFT>;
                max-prior-idle-ms = <MAGIC_PRIOR_IDLE>;
            };
        };

        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&kp>, <&kp>;
            display-name = "Mod-Tap";
        };

        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&mo>, <&kp>;
            display-name = "Layer-Tap";
        };

        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <90>;
            tapping-term-ms = <280>;
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&kp>, <&kp>;
            //to enable alt/cmd + tab on single hand
            hold-trigger-key-positions = <RIGHT_HAND_KEYS LEFT_LEFT_COLUMN>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <90>;
            tapping-term-ms = <280>;
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <LEFT_HAND_KEYS>;
            hold-trigger-on-release;
        };
        hash_dllr: hash_dollar {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp HASH>, <&kp DOLLAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        minus_plus: minus_plus {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp PLUS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        excl_equal: exclamation_equal {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EXCLAMATION>, <&kp EQUAL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
//      TODO: Fix silly hacky solution
        lbkt: left_bracket_only {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp LBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        rbkt: right_bracket_only {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RBKT>, <&kp RBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_q {
          timeout-ms = <COMBO_TIMEOUT>;
          key-positions = <0 1>;
          bindings = <&kp Q>;
        };
        compatible = "zmk,combos";
        combo_apos {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <1 2>;
            bindings = <&apos>;
        };
        compatible = "zmk,combos";
        combo_parens {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <2 3>;
            bindings = <&parens>;
        };
        compatible = "zmk,combos";
        combo_backspace {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <8 9>;
            bindings = <&kp BACKSPACE>;
        };
        compatible = "zmk,combos";
        combo_escape {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <10 11>;
            bindings = <&kp ESC>;
        };
        compatible = "zmk,combos";
        combo_quotes {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <11 12>;
            bindings = <&quotes>;
        };
        compatible = "zmk,combos";
        combo_brackets {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <12 13>;
            bindings = <&brackets>;
        };
        compatible = "zmk,combos";
        combo_enter {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <16 17>;
            bindings = <&kp ENTER>;
        };
        compatible = "zmk,combos";
        combo_z {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <21 22>;
            bindings = <&kp Z>;
        };
        compatible = "zmk,combos";
        combo_braces {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <23 24>;
            bindings = <&braces>;
        };
        compatible = "zmk,combos";
        combo_tags {
             timeout-ms = <COMBO_TIMEOUT>;
           key-positions = <28 29>;
         bindings = <&tags>;
        };
    };

    macros {
        parens: parens {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LPAR &kp RPAR>;
        };
        brackets: brackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &lbkt &rbkt>;
        };
        braces: braces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LBRC &kp RBRC>;
        };
        tags: tags {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LESS_THAN &kp GREATER_THAN>;
        };
        apos: apos {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp APOS &kp APOS>;
        };
        quotes: quotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp DOUBLE_QUOTES &kp DOUBLE_QUOTES>;
        };
    };


    keymap {
        compatible = "zmk,keymap";


      layer0  {
            display-name = "base";
            bindings = <
//                ╭──────0─────┬──────1────────┬───────2───────┬───────3────────┬─────4──────╮ ╭─────5──────┬───────6───────┬───────7───────┬───────8───────┬─────9─────╮
                   &kp V        &kp W           &kp G           &kp M            &kp J          &excl_equal  &kp DOT         &kp APOS        &kp SLASH       &lt 4 SEMI
//                ├─────10─────┼──────11───────┼───────12──────┼───────13───────┼─────14─────┤ ├────15──────┼──────16───────┼──────17───────┼──────18───────┼────19─────┤
                   &hmr LSHFT S &hml LCTRL N    &hml LALT T     &hml LGUI H      &kp K          &kp COMMA    &ak_a           &ak_e           &hmr RCTRL I    &hmr RSHFT C       
//╭──────20───────┼─────21─────┼──────22───────┼───────23──────┼───────24───────┼─────25─────┤ ├────26──────┼──────27───────┼──────28───────┼──────29───────┼────30─────┼──────31───────╮
   &kp TAB         &kp F        &kp P           &kp D           &kp L            &kp X          &kp MINUS    &kp U           &kp O           &kp Y           &kp B       &kp LBKT 
//╰───────────────┴────────────┴───────────────┼───────32──────┼───────33───────┼─────34─────┤ ├────35──────┼──────36───────┼──────37───────┼───────────────┴───────────┴───────────────╯
                                                &kp ESCAPE      &kp R            &lt 2 UNDER    &lt 2 BSPC   &mt RSHFT SPACE &num_word 1
//                                             ╰───────────────┴────────────────┴────────────╯ ╰────────────┴───────────────┴───────────────╯
                 >;
      };

      layer1 {
            display-name = "nav";
            bindings = <
//                ╭──────0─────┬──────1────────┬───────2───────┬───────3────────┬─────4──────╮ ╭─────5──────┬───────6───────┬───────7───────┬───────8───────┬─────9─────╮
                   ___          &kp N7          &kp N8          &kp N9           ___            ___          &kp DOT         &kp UP          ___             &kp BSPC
//                ├─────10─────┼──────11───────┼───────12──────┼───────13───────┼─────14─────┤ ├────15──────┼──────16───────┼──────17───────┼──────18───────┼────19─────┤
                   &mt LSHFT N0 &mt LCTRL N4    &mt LALT N5     &mt LGUI N6      ___            &kp COMMA    &mt RGUI LEFT   &mt RALT DOWN   &mt RCTRL RIGHT ___
//╭──────20───────┼─────21─────┼──────22───────┼───────23──────┼───────24───────┼─────25─────┤ ├────26──────┼──────27───────┼──────28───────┼──────29───────┼────30─────┼──────31───────╮
   ___             ___          &kp N1          &kp N2          &kp N3           ___            &minus_plus  ___             ___             ___             ___         ___
//╰───────────────┴────────────┴───────────────┼───────32──────┼───────33───────┼─────34─────┤ ├────35──────┼──────36───────┼──────37───────┼───────────────┴───────────┴───────────────╯
                                                ___             ___              ___            &trans       &kp SPACE       ___         
//                                             ╰───────────────┴────────────────┴────────────╯ ╰────────────┴───────────────┴───────────────╯
              >;
        };

       
       layer2 {
            display-name = "symbols";
            bindings = <
//                ╭──────0─────┬──────1────────┬───────2───────┬───────3────────┬─────4──────╮ ╭─────5──────┬───────6───────┬───────7───────┬───────8───────┬─────9─────╮
                   &kp GRAVE    &kp AMPS        ___             ___              ___            ___          XXX             XXX             &kp APOS        &kp COLON
//                ├─────10─────┼──────11───────┼───────12──────┼───────13───────┼─────14─────┤ ├────15──────┼──────16───────┼──────17───────┼──────18───────┼────19─────┤
                   &kp HASH     &kp CARET       &kp PIPE        &kp DOLLAR       &kp ASTERISK   &kp BSLH     XXX             XXX             &kp DQT         &kp PIPE
//╭──────20───────┼─────21─────┼──────22───────┼───────23──────┼───────24───────┼─────25─────┤ ├────26──────┼──────27───────┼──────28───────┼──────29───────┼────30─────┼──────31───────╮
   ___             &kp TILDE    &kp LT          &kp EQUAL       &kp MINUS        &kp GT         ___          XXX             XXX             &kp GRAVE       &kp QMARK   ___
//╰───────────────┴────────────┴───────────────┼───────32──────┼───────33───────┼─────34─────┤ ├────35──────┼──────36───────┼──────37───────┼───────────────┴───────────┴───────────────╯
                                                ___             ___              &kp BSPC       &kp BSPC     ___             ___         
//                                             ╰───────────────┴────────────────┴────────────╯ ╰────────────┴───────────────┴───────────────╯
            >;
        };


        layer3 {
            display-name = "function/bt";
            bindings = <
//                ╭──────0─────┬──────1────────┬───────2───────┬───────3────────┬─────4──────╮ ╭─────5──────┬───────6───────┬───────7───────┬───────8───────┬─────9─────╮
                   &kp F12      &kp F7          &kp F8          &kp F9           ___            &bt BT_SEL 0 &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4
//                ├─────10─────┼──────11───────┼───────12──────┼───────13───────┼─────14─────┤ ├────15──────┼──────16───────┼──────17───────┼──────18───────┼────19─────┤
                   &kp F11      &kp F4          &kp F5          &kp F6           ___            ___          &kp RGUI        &kp RALT        &kp RCTRL       &kp RSHIFT
//╭──────20───────┼─────21─────┼──────22───────┼───────23──────┼───────24───────┼─────25─────┤ ├────26──────┼──────27───────┼──────28───────┼──────29───────┼────30─────┼──────31───────╮
   ___             &kp F10      &kp F1          &kp F2          &kp F3           ___            ___          ___             ___             ___             ___         &bt BT_CLR
//╰───────────────┴────────────┴───────────────┼───────32──────┼───────33───────┼─────34─────┤ ├────35──────┼──────36───────┼──────37───────┼───────────────┴───────────┴───────────────╯
                                                &to 0           &to 0            &to 0          &to 0        &to 0           &to 0       
//                                             ╰───────────────┴────────────────┴────────────╯ ╰────────────┴───────────────┴───────────────╯
            >;

        };

       layer4 {
            display-name = "misc";
            bindings = <
//                ╭──────0─────┬──────1────────┬───────2───────┬───────3────────┬─────4──────╮ ╭─────5──────┬───────6───────┬───────7───────┬───────8───────┬─────9─────╮
                   ___          ___             ___             ___              ___            ___          &kp BACKSPACE   &kp DELETE      ___             ___ 
//                ├─────10─────┼──────11───────┼───────12──────┼───────13───────┼─────14─────┤ ├────15──────┼──────16───────┼──────17───────┼──────18───────┼────19─────┤
                   ___          ___             ___             ___              ___            ___          ___             ___             ___             ___
//╭──────20───────┼─────21─────┼──────22───────┼───────23──────┼───────24───────┼─────25─────┤ ├────26──────┼──────27───────┼──────28───────┼──────29───────┼────30─────┼──────31───────╮
   &to 3           ___          ___             ___             ___              ___            ___          ___             ___             ___             ___         ___
//╰───────────────┴────────────┴───────────────┼───────32──────┼───────33───────┼─────34─────┤ ├────35──────┼──────36───────┼──────37───────┼───────────────┴───────────┴───────────────╯
                                                ___             ___              ___            ___          ___             ___         
//                                             ╰───────────────┴────────────────┴────────────╯ ╰────────────┴───────────────┴───────────────╯
                    >;
            };

//        extra1 { status = "reserved"; };

        extra2 { status = "reserved"; };

       extra3 {
            display-name = "clear";
            bindings = <
//                ╭──────0─────┬──────1────────┬───────2───────┬───────3────────┬─────4──────╮ ╭─────5──────┬───────6───────┬───────7───────┬───────8───────┬─────9─────╮
                   ___          ___             ___             ___              ___            ___          ___             ___             ___             ___ 
//                ├─────10─────┼──────11───────┼───────12──────┼───────13───────┼─────14─────┤ ├────15──────┼──────16───────┼──────17───────┼──────18───────┼────19─────┤
                   ___          ___             ___             ___              ___            ___          ___             ___             ___             ___
//╭──────20───────┼─────21─────┼──────22───────┼───────23──────┼───────24───────┼─────25─────┤ ├────26──────┼──────27───────┼──────28───────┼──────29───────┼────30─────┼──────31───────╮
   ___             ___          ___             ___             ___              ___            ___          ___             ___             ___             ___         ___
//╰───────────────┴────────────┴───────────────┼───────32──────┼───────33───────┼─────34─────┤ ├────35──────┼──────36───────┼──────37───────┼───────────────┴───────────┴───────────────╯
                                                ___             ___              ___            ___          ___             ___         
//                                             ╰───────────────┴────────────────┴────────────╯ ╰────────────┴───────────────┴───────────────╯
                    >;
            };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        device {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
